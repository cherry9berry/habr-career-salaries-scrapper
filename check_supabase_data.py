#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Supabase
"""

import psycopg2

def connect_local():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î"""
    try:
        conn = psycopg2.connect(
            host='localhost',
            port=5432,
            database='scraping_db',
            user='scraper',
            password='!!!!QQQQ2222'
        )
        return conn
    except Exception:
        return None

def connect_supabase():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase"""
    conn = psycopg2.connect(
        host='aws-0-eu-central-1.pooler.supabase.com',
        port=5432,
        database='postgres',
        user='postgres.cehitgienxwzplcxbfdk',
        password='!!!!QQQQ2222'
    )
    return conn

def compare_table_data(local_conn, supabase_conn, table_name):
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –∏ Supabase"""
    local_cursor = local_conn.cursor()
    supabase_cursor = supabase_conn.cursor()
    
    # –°—á–∏—Ç–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
    local_cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
    local_count = local_cursor.fetchone()[0]
    
    # –°—á–∏—Ç–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤ Supabase
    supabase_cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
    supabase_count = supabase_cursor.fetchone()[0]
    
    print(f"üìä {table_name}:")
    print(f"   üè† –õ–æ–∫–∞–ª—å–Ω–æ:  {local_count:,} –∑–∞–ø–∏—Å–µ–π")
    print(f"   ‚òÅÔ∏è  Supabase:  {supabase_count:,} –∑–∞–ø–∏—Å–µ–π")
    
    if local_count == supabase_count:
        print(f"   ‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
        local_cursor.execute(f"SELECT id, title, alias FROM {table_name} ORDER BY id LIMIT 5")
        local_sample = local_cursor.fetchall()
        
        supabase_cursor.execute(f"SELECT id, title, alias FROM {table_name} ORDER BY id LIMIT 5")
        supabase_sample = supabase_cursor.fetchall()
        
        if local_sample == supabase_sample:
            print(f"   ‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
        else:
            print(f"   ‚ö†Ô∏è  –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è!")
            print(f"      –õ–æ–∫–∞–ª—å–Ω–æ:  {local_sample[0] if local_sample else '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}")
            print(f"      Supabase:  {supabase_sample[0] if supabase_sample else '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}")
    else:
        print(f"   ‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç! –†–∞–∑–Ω–∏—Ü–∞: {abs(local_count - supabase_count):,}")
        return False
    
    local_cursor.close()
    supabase_cursor.close()
    return True

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Supabase...")
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    local_conn = connect_local()
    if not local_conn:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î")
        print("üîß –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ")
        return
    
    try:
        supabase_conn = connect_supabase()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –æ–±–µ–∏–º –ë–î")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: {e}")
        local_conn.close()
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    tables = ['specializations', 'skills', 'regions', 'companies']
    all_ok = True
    
    for table in tables:
        try:
            if not compare_table_data(local_conn, supabase_conn, table):
                all_ok = False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {table}: {e}")
            all_ok = False
    
    print("\n" + "="*50)
    if all_ok:
        print("üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ Supabase!")
        print("‚úÖ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ SQLite –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è")
    else:
        print("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º –¥–∞–Ω–Ω—ã—Ö")
        print("üîß –ù—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö")
    
    local_conn.close()
    supabase_conn.close()

if __name__ == "__main__":
    main() 